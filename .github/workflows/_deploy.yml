name: Deployment
on:
  workflow_dispatch:
    inputs:
      environment:
        description: The environment to deploy to
        type: choice
        required: true
        options:
          - production
      app_version:
        description: app version
        type: string
        required: true
        default: latest
  workflow_call:
    inputs:
      environment:
        description: The environment to deploy to
        type: string
        default: latest
        required: false
      app_version:
        description: app version
        type: string
        required: false
        default: latest
    secrets:
      TECHNICAL_USER_PRIVATE_KEY:
        description: SSH private key
        required: true
      TECHNICAL_USER_PASSWORD:
        description: SSH password
        required: true
      VAULT_PASSWORD:
        description: Vault Password
        required: true

jobs:
  deploy:
    name: Deploy ${{ inputs.app_version }} on ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          name: github_actions
          key: ${{ secrets.TECHNICAL_USER_PRIVATE_KEY }}
          known_hosts: ${{ vars.KNOWN_HOSTS }}
          config: |
            Host *
              IdentityFile ~/.ssh/github_actions

      - name: Create vault pwd file
        run: echo ${{ secrets.VAULT_PASSWORD }} > infra/vault/.vault_pwd.txt

      - name: Run playbook
        run: .bin/product deploy ${{ inputs.environment }} --extra-vars "app_version=${{ inputs.app_version }}"
        env:
          ANSIBLE_VAULT_PASSWORD_FILE: infra/vault/.vault_pwd.txt
          ANSIBLE_REMOTE_USER: deploy
          ANSIBLE_BECOME_PASS: ${{ secrets.TECHNICAL_USER_PASSWORD }}

      - name: Encrypt logs
        run: .bin/product deploy:log:encrypt
        if: always()
        env:
          ANSIBLE_VAULT_PASSWORD_FILE: .infra/.vault_pwd.txt

      - name: Upload logs artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ inputs.environment }}
          path: /tmp/deploy.log.gpg

      - name: Add Job summary
        if: always()
        run: echo 'You can get logs using `.bin/product deploy:log:decrypt ${{ github.run_id }} ${{ inputs.environment }}`' >> $GITHUB_STEP_SUMMARY
